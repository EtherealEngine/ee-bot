FROM sybiote/root-builder as builder

# Create app directory
WORKDIR /app

RUN npm install --loglevel notice --legacy-peer-deps
# copy then compile the code
COPY . .

ENV APP_ENV=production

FROM node:latest as runner

# Set the working directory in the container
WORKDIR /app

COPY --from=builder /app ./
#Clone the repository and install dependecies  
WORKDIR /app/packages/projects/projects/ee-bot 
RUN git clone "https://github.com/SYBIOTE/ee-bot" .
RUN npm install
# run API

CMD ["npm", "run", "dev"]

# Set a healthcheck for the container
HEALTHCHECK --interval=10s --timeout=2s --retries=10 \
    CMD curl --fail http://localhost:4000/ || exit 1


# next part is for running headful chrome

#FROM ubuntu:latest
#WORKDIR /app

#RUN apt-get update; apt-get clean

# Add a user for running applications.
#RUN useradd apps
#RUN mkdir -p /home/apps && chown apps:apps /home/apps

# Install x11vnc.
#RUN apt-get install -y x11vnc

# Install xvfb.
#RUN apt-get install -y xvfb

# Install fluxbox.
#RUN apt-get install -y fluxbox

# Install wget.
#RUN apt-get install -y wget

# Install wmctrl.
#RUN apt-get install -y wmctrl

# Set the Chrome repo.
#RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    #&& echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list

# Install Chrome.
#RUN apt-get update && apt-get -y install google-chrome-stable

# Set the command to run when the container starts
#CMD ['./scripts/docker_gui_setup.sh']

# we check if the bot API is up and running or not
